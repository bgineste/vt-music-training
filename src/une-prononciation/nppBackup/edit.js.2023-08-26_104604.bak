/**
 * Retrieves the translation of text.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/
 */
import { __ } from '@wordpress/i18n';

/**
 * React hook that is used to mark the block wrapper element.
 * It provides all the necessary props like the class name.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops
 */
import { useBlockProps } from '@wordpress/block-editor';
import { TextControl } from '@wordpress/components';

/**
 * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.
 * Those files can contain any CSS code that gets applied to the editor.
 *
 * @see https://www.npmjs.com/package/@wordpress/scripts#using-css
 */
import './editor.scss';

/**
 * The edit function describes the structure of your block in the context of the
 * editor. This represents what the editor will render when the block is used.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit
 *
 * @return {WPElement} Element to render.
 */
export default function Edit(props) {
//	const chemin = props.cheminFichiers
//	console.log(props.cheminFichiers)
	const blockProps = useBlockProps()
    const { context } = props;
    const { "bloc-prononciation/cheminFichiers": cheminFichiers } = context;
    const { attributes: { texte },attributes: { path },attributes: { nomfichier },attributes: { interprete }, setAttributes, } = props;
	
	return (
		//ici saisir le texte, le path (actualisé par cheminFichiers), nomFichier et interprete (s'inspirer de bloc-test)
		<>
		<div { ...blockProps }>
			{ props.isSelected ? ( 
				<p> { cheminFichiers } </p>
							<TextControl
								label={ 'Texte à prononcer' }
								value={ texte }
								onChange={ ( val ) =>
									setAttributes( { texte: ( val ) } )
								}
							/>
			) : ( 
			 <div className="une-prononciation">
			 { { texte } != "" ? (
			 <p> { texte } </p>
			 ):(
			 <p>"Saisir le texte à prononcer"</p>
			 ) }
			 </div>
			) 
		}
		</div>
		
		</>
	);
}
