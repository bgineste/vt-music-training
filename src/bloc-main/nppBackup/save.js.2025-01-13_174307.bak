/**
 * React hook that is used to mark the block wrapper element.
 * It provides all the necessary props like the class name.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops
 */
import { useBlockProps, InnerBlocks } from '@wordpress/block-editor';

/**
 * The save function defines the way in which the different attributes should
 * be combined into the final markup, which is then serialized by the block
 * editor into `post_content`.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save
 *
 * @return {WPElement} Element to render.
 */
 
 /** 
 * le div <div data-classe-bloc-entete={classeBlocEntete}> a pour utilité de mettre à disposition
 *des scripts, la classe du bloc d'entête, si celui-ci doit être figé en haut de page
 */

export default function save(props) {
	const blockProps = useBlockProps.save()
    const {attributes: { titrePage }, attributes: { largeurPageMax }, attributes: { classeBlocEntete } } = props
	// Récupérer la variable injectée par PHP
    const isIphone = window.blockEditorData?.isIphone ?? false;
/*
	// Si on a besoin de disposer de l'attribut isIphone il faudrait remplacer l'instruction ci-dessus par la séquence ci-dessous
	useEffect(() => {
		// Détection ou récupération de isIphone
		const isIphone = window.blockEditorData?.isIphone ?? false;

		// Mettre à jour l’attribut
		setAttributes({ isIphone });
	}, []);
*/
	return (
	<>
		<div {...blockProps } className="vt--une-page_wrap">
			<div id="vt--une-page" className="vt--une-page">
				{ titrePage && (
					<h2 className="wp-block-heading">{ titrePage }</h2>
				) }
				<InnerBlocks.Content />
				<div id="vt--lecteur-entrainement" className="vt--masque-modal" style="display: none;">
					<div className="vt--masque-modal-inner">
						<div className="vt--popup-lecteur-entrainement">
							<div id="vt--bloc-lecteur" className="vt--bloc-lecteur"></div>
							<div className="vt--clavier-lecteur">
								<div>
									<button className="vt-repete-en-boucle" title="Répéter en boucle"><i class="fa-solid fa-arrows-spin"></i></button>
									<button onclick="vtRewind();" title="Rembobiner"><i class="fas fa-undo-alt"></i></button>
									<button onclick="vtAr10();" title="Recul (10 sec)"><i class="fas fa-angle-double-left"></i></button>
									<button onclick="vtAr3();" title="Recul (3 sec)"><i class="fas fa-angle-left"></i></button>
									<button onclick="vtAv3();" title="Avance (3 sec)"><i class="fas fa-angle-right"></i></button>
									<button onclick="vtAv10();" title="Avance (10 sec)"><i class="fas fa-angle-double-right"></i></button>
									
									<button onclick="vtPlayPause();"><i class="fas fa-play"></i><i class="fas fa-pause"></i></button>
								</div>
							{!isIphone && (	
								<div>
									<div  class="vt--balance">
										<div class="vt--balance-une-voie">
											<input type="range" class="vt--balance-curseur" id="balanceG" min="0" max="10" value="10" step="1" onclick="setVol('G', this.value / 10);"  />
											<div class="vt--balance-nom-voie">G</div>
										</div>
										<div class="vt--balance-une-voie">
											<input type="range" class="vt--balance-curseur" id="balanceD" min="0" max="10" value="10" step="1" onclick="setVol('D', this.value / 10);"  />
											<div class="vt--balance-nom-voie">D</div>
										</div>
									</div>
								</div>
							)}
								<div>
									<button onclick="vtSpeedDown()" title="Plus lentement"><i class="fas fa-chevron-down"></i></button>
									<button onclick="vtSpeedNormal()" title="Vitesse normale"><i class="fas fa-circle" style="font-size: 1rem;"></i></button>
									<button onclick="vtSpeedUp()" title="Plus vite"><i class="fas fa-chevron-up"></i></button>
									<div class="aff-compteur"><span id="aff-vitesse" class="span-centre-v">-</span></div>
									
								</div>
								<div>
									<button onclick="vtDefDebBoucle(); vtElargirCompteur('compteur-deb-boucle')" title="Marque le début de boucle"><i class="fas fa-step-forward"></i></button>
									<div id="compteur-deb-boucle" class="e-gr__support-compteur">
										<div class="e-gr__texte-compteur"><div id="deb-boucle">-</div></div>
										<div class="e-gr__masque-fleches">
											<div class="e-gr__fleche e-gr__fleche-g"><div onclick="vtTraiteFleche('debBoucle','flecheGauche');"><i class="fas fa-caret-square-left"></i></div></div>
											<div class="e-gr__fleche e-gr__fleche-d"><div onclick="vtTraiteFleche('debBoucle','flecheDroite');"><i class="fas fa-caret-square-right"></i></div></div>
										</div>
									</div>
									<div id="compteur-fin-boucle" class="e-gr__support-compteur">
										<div class="e-gr__texte-compteur"><div id="fin-boucle">-</div></div>
										<div class="e-gr__masque-fleches">
											<div class="e-gr__fleche e-gr__fleche-g"><div onclick="vtTraiteFleche('finBoucle','flecheGauche');"><i class="fas fa-caret-square-left"></i></div></div>
											<div class="e-gr__fleche e-gr__fleche-d"><div onclick="vtTraiteFleche('finBoucle','flecheDroite');"><i class="fas fa-caret-square-right"></i></div></div>
										</div>
									</div>
									<button onclick="vtDefFinBoucle(); vtElargirCompteur('compteur-fin-boucle')" title="Marque la fin de boucle"><i class="fas fa-step-backward"></i></button>
									<select id="choix-boucle" onchange="vtChoixBoucle();" class="block-enregistrement-gr--clients-choix-boucle" style="display: none;" title="choix d'une boucle"></select>
									<button id="boucle" title="Active/désactive la boucle" onclick="vtLoopIt()" value="choisir boucle"><i class="fas fa-sync-alt"></i></button>
									<button id="enreg-boucle" onclick="LanceEnregBoucle();" title="Enregistre l'intervalle défini" ><i class="fas fa-circle" style="color: red;"></i></button>
									<button id="ren-suppr-boucle" onclick="vtSupprBoucle();" title="Renomme ou supprime la boucle courante" style="display: none;"><i class="fa-solid fa-trash-can"></i></button>
									<div class="block-enregistrement-gr--clients-saisie-nom-boucle" style="display: none;">
									<input id="saisie-nom-boucle" type="text" size="20" value="" placeholder="Affecter un nom à cette boucle" />
									<button onclick="vtEnregBoucle();" title="Valide le nom de la boucle" ><i class="fas fa-check"></i></button>
									</div>
									
								</div>
							</div>
							<div style="display: flex; width: 100%; justify-content: space-between; align-items: center; ">
							<div style="display: flex; width: 100%; margin-right: .05vw; gap: 10px; justify-content: flex-start; font-size: 1.5em;">
							<i class="fa-solid fa-magnifying-glass-plus" style="width: fit-content;" onClick="vtModifierLargeurBloc('vt--bloc-lecteur',50);"></i>
							<i class="fa-solid fa-magnifying-glass-minus" style="width: fit-content;" onClick="vtModifierLargeurBloc('vt--bloc-lecteur',-50);"></i>
							</div>
							<i class="fa-sharp fa-regular fa-circle-xmark" style="width: fit-content; cursor: pointer; font-size: 3em; color: white;" onclick="vtDesactiverLecteurEntrainement('vt--lecteur-entrainement');"></i>
							</div>
						</div>
					</div>
				</div>			
			</div>
            <div data-classe-bloc-entete={classeBlocEntete}>
            </div>
		</div>
	</>
	)
}
