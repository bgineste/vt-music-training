import { useBlockProps, InnerBlocks } from '@wordpress/block-editor';
//import useHasSiblingBlock from '../../hooks/useHasSiblingBlock';
import { __ } from '@wordpress/i18n';

//import getTypeParentBlock from '../../hooks/getTypeParentBlock';
import { TextControl, RadioControl } from '@wordpress/components';
import './editor.scss';

export default function Edit(props) {
    const blockProps = useBlockProps();
    const { context, attributes, setAttributes, clientId } = props;
    const { "bloc-fichiers-de-travail/cheminFichiers": cheminFichiers } = context;
    const { cheminFichierTutti, etatDuBoutonTypeDeFichier } = attributes;

    // Initialisation du chemin si absent
    if (!cheminFichierTutti) {
        setAttributes({ cheminFichierTutti: cheminFichiers });
    }

    //const ALLOWED_BLOCKS = [ 'core/paragraph', 'vt-music-training/un-fichier-tutti', 'vt-music-training/des-fichiers-pupitre' ] // à compléter

	// Template pour InnerBlocks
    /*const TEMPLATE_PRONONCIATIONS = [
        ['vt-music-training/bloc-prononciation', { placeholder: 'Prononciations' }],
    ];*/

    return (
	
        <div {...blockProps}>
            {props.isSelected ? (
                <div className="vt--parametrage-bloc">
                    <TextControl
                        label="Chemin du fichier 'tutti' (audio ou vidéo)"
                        value={cheminFichierTutti}
                        onChange={(val) => setAttributes({ cheminFichierTutti: val })}
                    />
					<RadioControl
						label={ 'Type de fichier '}
						/*help={ 'actif => true, inactif => false' }*/
						selected={ etatDuBoutonTypeDeFichier}
						options={ [
							{ label: 'audio', value: 'a' },
							{ label: 'video', value: 'v' },
						] }
						onChange={ ( value ) => 
							setAttributes( { etatDuBoutonTypeDeFichier: (value)})
						}
					/>
                </div>
            ) : (
                <div className="vt--fichier-tutti">
					Le fichier tutti
                </div>
            )}
        </div>
    );
}
