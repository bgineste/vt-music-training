/**
 * React hook that is used to mark the block wrapper element.
 * It provides all the necessary props like the class name.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops
 */
import { useBlockProps, InnerBlocks } from '@wordpress/block-editor';

/**
 * The save function defines the way in which the different attributes should
 * be combined into the final markup, which is then serialized by the block
 * editor into `post_content`.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save
 *
 * @return {WPElement} Element to render.
 */
 
 /** 
 * le div <div data-classe-bloc-entete={classeBlocEntete}> a pour utilité de mettre à disposition
 *des scripts, la classe du bloc d'entête, si celui-ci doit être figé en haut de page
 */

export default function save(props) {
	const blockProps = useBlockProps.save()
    const {attributes: { titrePage }, attributes: { largeurPageMax }, attributes: { classeBlocEntete } } = props
	// Récupérer la variable injectée par PHP
    const isIphone = window.blockEditorData?.isIphone ?? false;
/*
	// Si on a besoin de disposer de l'attribut isIphone il faudrait remplacer l'instruction ci-dessus par la séquence ci-dessous
	useEffect(() => {
		// Détection ou récupération de isIphone
		const isIphone = window.blockEditorData?.isIphone ?? false;

		// Mettre à jour l’attribut
		setAttributes({ isIphone });
	}, []);
*/
	return (
	<>
		<div {...blockProps } className="vt--une-page_wrap">
			<div id="vt--une-page" className="vt--une-page">
				{ titrePage && (
					<h2 className="wp-block-heading">{ titrePage }</h2>
				) }
				<InnerBlocks.Content />
				<div id="vt--lecteur-entrainement" className="vt--masque-modal" style="display: none;">
					<div className="vt--masque-modal-inner">
						<div className="vt--popup-lecteur-entrainement">
							<div id="vt-bloc-lecteur" className="vt--bloc-lecteur"></div>
							<div className="vt--clavier-lecteur">
                                {!isIphone && (
                                    <div>
                                        <p>ceci n'est pas un iPhone.</p>
                                    </div>
                                )}
							<div className="vt--echap-lecteur-entrainement" id="fermer-lecteur-audio-video" style="width: fit-content;position: absolute;bottom: 3%;right: 1%;cursor: pointer; font-size: 3rem; color: white;" onclick="DesactiverLecteurEntrainement('vt--lecteur-entrainement');">
								<i class="fa-sharp fa-regular fa-circle-xmark"></i>
							</div>
						</div>
					</div>
				</div>			
			</div>
            <div data-classe-bloc-entete={classeBlocEntete}>
            </div>
		</div>
	</>
	)
}
