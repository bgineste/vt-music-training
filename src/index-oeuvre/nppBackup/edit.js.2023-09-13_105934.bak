/**
 * Retrieves the translation of text.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/
 */
import { __ } from '@wordpress/i18n';

/**
 * React hook that is used to mark the block wrapper element.
 * It provides all the necessary props like the class name.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops
 */
import { useBlockProps } from '@wordpress/block-editor';
//import { TextControl } from '@wordpress/components';


/**
 * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.
 * Those files can contain any CSS code that gets applied to the editor.
 *
 * @see https://www.npmjs.com/package/@wordpress/scripts#using-css
 */
import './editor.scss';

import { TextControl } from '@wordpress/components';
import { RadioControl } from '@wordpress/components';

/**
 * The edit function describes the structure of your block in the context of the
 * editor. This represents what the editor will render when the block is used.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit
 *
 * @return {WPElement} Element to render.
 */
export default function Edit(props) {
	const blockProps = useBlockProps()
    const { attributes: { texteDuBouton },attributes: { etatDuBouton }, setAttributes, } = props
	
	return (
		<div  {...blockProps } >
			{ props.isSelected ? ( 
				<div className="bk-parametrage">
					<TextControl
						label={ 'Label du bouton d\'index ' }
						value={ texteDuBouton }
						onChange={ ( val ) =>
							setAttributes( { texteDuBouton: ( val ) } )
						}
					/>
					<RadioControl
						label={ 'Etat initial du bouton '}
						help={ 'actif => true, inactif => false' }
						selected={ etatDuBouton }
						options={ [
							{ label: 'actif', value: true },
							{ label: 'inactif', value: false },
						] }
						onChange={ ( value ) => 
							setAttributes( { etatDuBouton: (value)})
						}
					/>
				</div>
			) : (
				<p className="vt-bloc-is-not-select">Label du bouton : { texteDuBouton } <br />
				Etat du bouton: { etatDuBouton }</p>
			)
			}
		</div>
	)
}
